module HideDelegate;

interface ClientI {
  Unit enquire(Bool rem);
  Int getCog();
}

interface PersonI {
  DeptI getDept();
  Int getCog();

}

interface DeptI {
  PersonI getManager();
  Unit setManager(PersonI m);
  Int getCog();
}

class Person(Int cog, DeptI d) implements PersonI {

  DeptI getDept() {
      return d;
  }

  Int getCog() {
    return cog;  	
  }
}

class Dept(Int cog) implements DeptI {
  PersonI m;
  
  PersonI getManager() {
    return m;
  }
  
  Unit setManager(PersonI p) {
    m = p;
  }

  Int getCog() {
    return cog;  	
  }

}

class Client(Int cog) implements ClientI {
  Unit enquire(Bool remote) {
    DeptI d;
    
    if (remote) {
      d = new Dept(cog+1);
    } else {
      d = new local Dept(cog);
    }
    
    Int dcog = d.getCog();
    PersonI m = new Person(dcog+1,d);
    PersonI p = new Person(dcog+2,d);
    d.setManager(m);

    /* Client -> Person; Client -> Department */
    d = p.getDept();
    m = d.getManager();
  }

  Int getCog() {
    return cog;  	
  }
}

{
  println("test");
  ClientI c = new Client(0);
  c.enquire(False);
}
